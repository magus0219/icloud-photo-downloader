image: nas.magicqin.com:5555/magicqin/images/docker:19.03.3-compose

stages:
  - build
  - test
  - deploy
  - public

services:
- name: redis:5.0.7
  alias: redis

build:
  stage: build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest

test:
  image:
    name: $CI_REGISTRY_IMAGE:latest
  variables:
    ARTASCOPE_ENV: test
  stage: test
  environment:
    name: test
  script:
    - /app/docker-entrypoint.sh test

deploy_stage:
  stage: deploy
  script:
    - cd /deployment/docker-compose
    - docker-compose up -d
  variables:
    ARTASCOPE_ENV: staging
    ARTASCOPE_DOCKER_REGISTRY: "nas.magicqin.com:5555/"
    ARTASCOPE_WEB_PORT: 31100
    ARTASCOPE_FLOWER_PORT: 31101
    TIME_ZONE: "Asia/Shanghai"
  environment:
    name: staging
  when: manual
  only:
    - master

deploy_prod:
  image: nas.magicqin.com:5555/magicqin/images/docker:19.03.3-kubectl
  stage: deploy
  script:
    - export KUBECONFIG=$KUBECONFIG
    - export NEW_IMAGE=nas.magicqin.com:5555/magicqin/icloud-photo-downloader:$CI_COMMIT_SHA
    - kubectl set image deployment artascope-app artascope-web=$NEW_IMAGE celery-worker-main=$NEW_IMAGE celery-worker-upload=$NEW_IMAGE celery-worker-msg=$NEW_IMAGE celery-flower=$NEW_IMAGE scheduler=$NEW_IMAGE --record -n artascope
  variables:
    ARTASCOPE_DOCKER_REGISTRY: "nas.magicqin.com:5555/"
    ARTASCOPE_ENV: prod
  environment:
    name: prod
  when: manual
  only:
    - master

public_to_docker_hub:
  image:
    name: $CI_REGISTRY_IMAGE:latest
  stage: public
  script:
    - docker tag nas.magicqin.com:5555/magicqin/icloud-photo-downloader:latest magicqin/icloud-photo-downloader:latest
    - docker push magicqin/icloud-photo-downloader:latest
  environment:
    name: prod
  when: manual
  only:
    - master
